define(["durandal/system", "knockout"], function (e, t) { function n(t) { return void 0 == t && (t = {}), e.isBoolean(t.closeOnDeactivate) || (t.closeOnDeactivate = f.defaults.closeOnDeactivate), t.beforeActivate || (t.beforeActivate = f.defaults.beforeActivate), t.afterDeactivate || (t.afterDeactivate = f.defaults.afterDeactivate), t.affirmations || (t.affirmations = f.defaults.affirmations), t.interpretResponse || (t.interpretResponse = f.defaults.interpretResponse), t.areSameItem || (t.areSameItem = f.defaults.areSameItem), t.findChildActivator || (t.findChildActivator = f.defaults.findChildActivator), t } function a(t, n, a) { return e.isArray(a) ? t[n].apply(t, a) : t[n](a) } function i(t, n, a, i, r) { if (t && t.deactivate) { e.log("Deactivating", t); var c; try { c = t.deactivate(n) } catch (o) { return e.log("ERROR: " + o.message, o), void i.resolve(!1) } c && c.then ? c.then(function () { a.afterDeactivate(t, n, r), i.resolve(!0) }, function (t) { t && e.log(t), i.resolve(!1) }) : (a.afterDeactivate(t, n, r), i.resolve(!0)) } else t && a.afterDeactivate(t, n, r), i.resolve(!0) } function r(t, n, i, r) { var c; if (t && t.activate) { e.log("Activating", t); try { c = a(t, "activate", r) } catch (o) { return e.log("ERROR: " + o.message, o), void i(!1) } } c && c.then ? c.then(function () { n(t), i(!0) }, function (t) { t && e.log("ERROR: " + t.message, t), i(!1) }) : (n(t), i(!0)) } function c(t, n, a, i) { return i = e.extend({}, u, i), a.lifecycleData = null, e.defer(function (r) { function c() { if (t && t.canDeactivate && i.canDeactivate) { var c; try { c = t.canDeactivate(n) } catch (o) { return e.log("ERROR: " + o.message, o), void r.resolve(!1) } c.then ? c.then(function (e) { a.lifecycleData = e, r.resolve(a.interpretResponse(e)) }, function (t) { t && e.log("ERROR: " + t.message, t), r.resolve(!1) }) : (a.lifecycleData = c, r.resolve(a.interpretResponse(c))) } else r.resolve(!0) } var o = a.findChildActivator(t); o ? o.canDeactivate().then(function (e) { e ? c() : r.resolve(!1) }) : c() }).promise() } function o(t, n, i, r, c) { return i.lifecycleData = null, e.defer(function (o) { if (i.areSameItem(n(), t, r, c)) return void o.resolve(!0); if (t && t.canActivate) { var v; try { v = a(t, "canActivate", c) } catch (f) { return e.log("ERROR: " + f.message, f), void o.resolve(!1) } v.then ? v.then(function (e) { i.lifecycleData = e, o.resolve(i.interpretResponse(e)) }, function (t) { t && e.log("ERROR: " + t.message, t), o.resolve(!1) }) : (i.lifecycleData = v, o.resolve(i.interpretResponse(v))) } else o.resolve(!0) }).promise() } function v(a, v) { var f, u = t.observable(null); v = n(v); var s = t.computed({ read: function () { return u() }, write: function (e) { s.viaSetter = !0, s.activateItem(e) } }); return s.__activator__ = !0, s.settings = v, v.activator = s, s.isActivating = t.observable(!1), s.forceActiveItem = function (e) { u(e) }, s.canDeactivateItem = function (e, t, n) { return c(e, t, v, n) }, s.deactivateItem = function (t, n) { return e.defer(function (e) { s.canDeactivateItem(t, n).then(function (a) { a ? i(t, n, v, e, u) : (s.notifySubscribers(), e.resolve(!1)) }) }).promise() }, s.canActivateItem = function (e, t) { return o(e, u, v, f, t) }, s.activateItem = function (t, n, a) { var c = s.viaSetter; return s.viaSetter = !1, e.defer(function (o) { if (s.isActivating()) return void o.resolve(!1); s.isActivating(!0); var l = u(); return v.areSameItem(l, t, f, n) ? (s.isActivating(!1), void o.resolve(!0)) : void s.canDeactivateItem(l, v.closeOnDeactivate, a).then(function (a) { a ? s.canActivateItem(t, n).then(function (a) { a ? e.defer(function (e) { i(l, v.closeOnDeactivate, v, e) }).promise().then(function () { t = v.beforeActivate(t, n), r(t, u, function (e) { f = n, s.isActivating(!1), o.resolve(e) }, n) }) : (c && s.notifySubscribers(), s.isActivating(!1), o.resolve(!1)) }) : (c && s.notifySubscribers(), s.isActivating(!1), o.resolve(!1)) }) }).promise() }, s.canActivate = function () { var e; return a ? (e = a, a = !1) : e = s(), s.canActivateItem(e) }, s.activate = function () { var e; return a ? (e = a, a = !1) : e = s(), s.activateItem(e) }, s.canDeactivate = function (e) { return s.canDeactivateItem(s(), e) }, s.deactivate = function (e) { return s.deactivateItem(s(), e) }, s.includeIn = function (e) { e.canActivate = function () { return s.canActivate() }, e.activate = function () { return s.activate() }, e.canDeactivate = function (e) { return s.canDeactivate(e) }, e.deactivate = function (e) { return s.deactivate(e) } }, v.includeIn ? s.includeIn(v.includeIn) : a && s.activate(), s.forItems = function (t) { v.closeOnDeactivate = !1, v.determineNextItemToActivate = function (e, t) { var n = t - 1; return -1 == n && e.length > 1 ? e[1] : n > -1 && n < e.length - 1 ? e[n] : null }, v.beforeActivate = function (e) { var n = s(); if (e) { var a = t.indexOf(e); -1 == a ? t.push(e) : e = t()[a] } else e = v.determineNextItemToActivate(t, n ? t.indexOf(n) : 0); return e }, v.afterDeactivate = function (e, n) { n && t.remove(e) }; var n = s.canDeactivate; s.canDeactivate = function (a) { return a ? e.defer(function (e) { function n() { for (var t = 0; t < r.length; t++) if (!r[t]) return void e.resolve(!1); e.resolve(!0) } for (var i = t(), r = [], c = 0; c < i.length; c++) s.canDeactivateItem(i[c], a).then(function (e) { r.push(e), r.length == i.length && n() }) }).promise() : n() }; var a = s.deactivate; return s.deactivate = function (n) { return n ? e.defer(function (e) { function a(a) { setTimeout(function () { s.deactivateItem(a, n).then(function () { r++, t.remove(a), r == c && e.resolve() }) }, 1) } for (var i = t(), r = 0, c = i.length, o = 0; c > o; o++) a(i[o]) }).promise() : a() }, s }, s } var f, u = { canDeactivate: !0 }, s = { closeOnDeactivate: !0, affirmations: ["yes", "ok", "true"], interpretResponse: function (n) { return e.isObject(n) && (n = n.can || !1), e.isString(n) ? -1 !== t.utils.arrayIndexOf(this.affirmations, n.toLowerCase()) : n }, areSameItem: function (e, t, n, a) { return e == t }, beforeActivate: function (e) { return e }, afterDeactivate: function (e, t, n) { t && n && n(null) }, findChildActivator: function (e) { return null } }; return f = { defaults: s, create: v, isActivator: function (e) { return e && e.__activator__ } } });