define(["durandal/system", "durandal/binder", "knockout"], function (e, r, t) { function n(e) { var r = e[0]; return "_" === r || "$" === r || P && e === P } function o(r) { return !(!r || void 0 === r.nodeType || !e.isNumber(r.nodeType)) } function a(e) { if (!e || o(e) || e.ko === t || e.jquery) return !1; var r = p.call(e); return -1 == y.indexOf(r) && !(e === !0 || e === !1) } function i(e) { var r = {}; return Object.defineProperty(e, "__observable__", { enumerable: !1, configurable: !1, writable: !1, value: r }), r } function u(e, r, t) { var n = e.__observable__, o = !0; if (!n || !n.__full__) { n = n || i(e), n.__full__ = !0, m.forEach(function (t) { r[t] = function () { return h[t].apply(e, arguments) } }), g.forEach(function (t) { e[t] = function () { o = !1; var e = j[t].apply(r, arguments); return o = !0, e } }), d.forEach(function (t) { e[t] = function () { o && r.valueWillMutate(); var n = h[t].apply(e, arguments); return o && r.valueHasMutated(), n } }), _.forEach(function (n) { e[n] = function () { for (var a = 0, i = arguments.length; i > a; a++) l(arguments[a], t); o && r.valueWillMutate(); var u = h[n].apply(e, arguments); return o && r.valueHasMutated(), u } }), e.splice = function () { for (var n = 2, a = arguments.length; a > n; n++) l(arguments[n], t); o && r.valueWillMutate(); var i = h.splice.apply(e, arguments); return o && r.valueHasMutated(), i }; for (var a = 0, u = e.length; u > a; a++) l(e[a], t) } } function l(r, n) { var o, l; if (P && r && r[P] && (n = n ? n.slice(0) : [], n.push(r[P])), a(r) && (o = r.__observable__, !o || !o.__full__)) { if (o = o || i(r), o.__full__ = !0, e.isArray(r)) { var c = t.observableArray(r); u(r, c, n) } else for (var v in r) if (!b(v) && !o[v]) { var p = Object.getPropertyDescriptor(r, v); p && (p.get || p.set) ? f(r, v, { get: p.get, set: p.set }) : (l = r[v], e.isFunction(l) || s(r, v, l, n)) } O && e.log("Converted", r) } } function c(e, r, t) { t ? r ? r.destroyAll || u(r, e) : (r = [], u(r, e)) : l(r), e(r) } function s(r, n, o, a) { var s, f, v = r.__observable__ || i(r); if (void 0 === o && (o = r[n]), e.isArray(o)) s = t.observableArray(o), u(o, s, a), f = !0; else if ("function" == typeof o) { if (!t.isObservable(o)) return null; s = o } else !A && e.isPromise(o) ? (s = t.observable(), o.then(function (r) { if (e.isArray(r)) { var n = t.observableArray(r); u(r, n, a), r = n } s(r) })) : (s = t.observable(o), l(o, a)); return a && a.length > 0 && a.forEach(function (t) { e.isArray(o) ? s.subscribe(function (e) { t(r, n, null, e) }, null, "arrayChange") : s.subscribe(function (e) { t(r, n, e, null) }) }), Object.defineProperty(r, n, { configurable: !0, enumerable: !0, get: s, set: t.isWriteableObservable(s) ? function (r) { r && e.isPromise(r) && !A ? r.then(function (r) { c(s, r, e.isArray(r)) }) : c(s, r, f) } : void 0 }), v[n] = s, s } function f(r, n, o) { var a, i = { owner: r, deferEvaluation: !0 }; return "function" == typeof o ? i.read = o : ("value" in o && e.error('For defineProperty, you must not specify a "value" for the property. You must provide a "get" function.'), "function" != typeof o.get && "function" != typeof o.read && e.error('For defineProperty, the third parameter must be either an evaluator function, or an options object containing a function called "get".'), i.read = o.get || o.read, i.write = o.set || o.write), a = t.computed(i), r[n] = a, s(r, n, a) } var v, b, p = Object.prototype.toString, y = ["[object Function]", "[object String]", "[object Boolean]", "[object Number]", "[object Date]", "[object RegExp]"], g = ["remove", "removeAll", "destroy", "destroyAll", "replace"], d = ["pop", "reverse", "sort", "shift", "slice"], _ = ["push", "unshift"], m = ["filter", "map", "reduce", "reduceRight", "forEach", "every", "some"], h = Array.prototype, j = t.observableArray.fn, O = !1, P = void 0, A = !1; if (!("getPropertyDescriptor" in Object)) { var E = Object.getOwnPropertyDescriptor, D = Object.getPrototypeOf; Object.getPropertyDescriptor = function (e, r) { for (var t, n = e; n && !(t = E(n, r)) ;) n = D(n); return t } } return v = function (e, r) { var n, o, a; return e ? (n = e.__observable__, n && (o = n[r]) ? o : (a = e[r], t.isObservable(a) ? a : s(e, r, a))) : null }, v.defineProperty = f, v.convertProperty = s, v.convertObject = l, v.install = function (e) { var t = r.binding; r.binding = function (e, r, n) { n.applyBindings && !n.skipConversion && l(e), t(e, r) }, O = e.logConversion, e.changeDetection && (P = e.changeDetection), A = e.skipPromises, b = e.shouldIgnorePropertyName || n }, v });