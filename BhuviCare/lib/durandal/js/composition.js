define(["durandal/system", "durandal/viewLocator", "durandal/binder", "durandal/viewEngine", "durandal/activator", "jquery", "knockout"], function (e, t, i, n, a, o, r) { function c(t, i, n) { try { if (t.onError) try { t.onError(i, n) } catch (a) { e.error(a) } else e.error(i) } finally { l(t, n, !0) } } function d(e) { for (var t = [], i = { childElements: t, activeView: null }, n = r.virtualElements.firstChild(e) ; n;) 1 == n.nodeType && (t.push(n), n.getAttribute(A) && (i.activeView = n)), n = r.virtualElements.nextSibling(n); return i.activeView || (i.activeView = t[0]), i } function l(e, t, i) { if (E--, 0 === E) { var n = N; N = [], i || setTimeout(function () { for (var i = n.length; i--;) try { n[i]() } catch (a) { c(e, a, t) } }, 1) } s(e) } function s(e) { delete e.activeView, delete e.viewElements } function u(t, i, n, a) { if (n) i(); else if (t.activate && t.model && t.model.activate) { var o; try { o = e.isArray(t.activationData) ? t.model.activate.apply(t.model, t.activationData) : t.model.activate(t.activationData), o && o.then ? o.then(i, function (e) { c(t, e, a), i() }) : o || void 0 === o ? i() : l(t, a) } catch (r) { c(t, r, a) } } else i() } function v(t, i) { var t = this; if (t.activeView && t.activeView.removeAttribute(A), t.child) try { t.model && t.model.attached && (t.composingNewView || t.alwaysTriggerAttach) && t.model.attached(t.child, t.parent, t), t.attached && t.attached(t.child, t.parent, t), t.child.setAttribute(A, !0), t.composingNewView && t.model && t.model.detached && r.utils.domNodeDisposal.addDisposeCallback(t.child, function () { try { t.model.detached(t.child, t.parent, t) } catch (e) { c(t, e, i) } }) } catch (n) { c(t, n, i) } t.triggerAttach = e.noop } function m(t) { if (e.isString(t.transition)) { if (t.activeView) { if (t.activeView == t.child) return !1; if (!t.child) return !0; if (t.skipTransitionOnSameViewId) { var i = t.activeView.getAttribute("data-view"), n = t.child.getAttribute("data-view"); return i != n } } return !0 } return !1 } function f(e) { for (var t = 0, i = e.length, n = []; i > t; t++) { var a = e[t].cloneNode(!0); n.push(a) } return n } function g(t) { var i = f(t.parts), n = y.getParts(i), a = y.getParts(t.child); for (var r in n) { var c = a[r]; c || (c = o('[data-part="' + r + '"]', t.child).get(0)) ? c.parentNode.replaceChild(n[r], c) : e.log("Could not find part to override: " + r) } } function h(t) { var i, n, a = r.virtualElements.childNodes(t.parent); if (!e.isArray(a)) { var o = []; for (i = 0, n = a.length; n > i; i++) o[i] = a[i]; a = o } for (i = 1, n = a.length; n > i; i++) r.removeNode(a[i]) } function p(e) { r.utils.domData.set(e, C, e.style.display), e.style.display = "none" } function w(e) { var t = r.utils.domData.get(e, C); e.style.display = "none" === t ? "block" : t } function V(e) { var t = e.getAttribute("data-bind"); if (!t) return !1; for (var i = 0, n = _.length; n > i; i++) if (t.indexOf(_[i]) > -1) return !0; return !1 } var y, b = {}, A = "data-active-view", N = [], E = 0, S = "durandal-composition-data", x = "data-part", D = ["model", "view", "transition", "area", "strategy", "activationData", "onError"], C = "durandal-visibility-data", _ = ["compose:"], T = { complete: function (e) { N.push(e) } }; return y = { composeBindings: _, convertTransitionToModuleId: function (e) { return "transitions/" + e }, defaultTransitionName: null, current: T, addBindingHandler: function (e, t, i) { var n, a, o = "composition-handler-" + e; t = t || r.bindingHandlers[e], i = i || function () { return void 0 }, a = r.bindingHandlers[e] = { init: function (e, n, a, c, d) { if (E > 0) { var l = { trigger: r.observable(null) }; y.current.complete(function () { t.init && t.init(e, n, a, c, d), t.update && (r.utils.domData.set(e, o, t), l.trigger("trigger")) }), r.utils.domData.set(e, o, l) } else r.utils.domData.set(e, o, t), t.init && t.init(e, n, a, c, d); return i(e, n, a, c, d) }, update: function (e, t, i, n, a) { var c = r.utils.domData.get(e, o); return c.update ? c.update(e, t, i, n, a) : void (c.trigger && c.trigger()) } }; for (n in t) "init" !== n && "update" !== n && (a[n] = t[n]) }, getParts: function (e, t) { if (t = t || {}, !e) return t; void 0 === e.length && (e = [e]); for (var i = 0, n = e.length; n > i; i++) { var a, o = e[i]; o.getAttribute && (a = o.getAttribute(x), a && (t[a] = o), o.hasChildNodes() && !V(o) && y.getParts(o.childNodes, t)) } return t }, cloneNodes: f, finalize: function (t, n) { if (void 0 === t.transition && (t.transition = this.defaultTransitionName), t.child || t.activeView) if (m(t)) { var a = this.convertTransitionToModuleId(t.transition); e.acquire(a).then(function (e) { t.transition = e, e(t).then(function () { if (t.cacheViews) { if (t.activeView) { var e = i.getBindingInstruction(t.activeView); e && void 0 != e.cacheViews && !e.cacheViews ? r.removeNode(t.activeView) : p(t.activeView) } } else t.child ? h(t) : r.virtualElements.emptyNode(t.parent); t.child && w(t.child), t.triggerAttach(t, n), l(t, n) }) }).fail(function (e) { c(t, "Failed to load transition (" + a + "). Details: " + e.message, n) }) } else { if (t.child != t.activeView) { if (t.cacheViews && t.activeView) { var o = i.getBindingInstruction(t.activeView); !o || void 0 != o.cacheViews && !o.cacheViews ? r.removeNode(t.activeView) : p(t.activeView) } t.child ? (t.cacheViews || h(t), w(t.child)) : t.cacheViews || r.virtualElements.emptyNode(t.parent) } t.triggerAttach(t, n), l(t, n) } else t.cacheViews || r.virtualElements.emptyNode(t.parent), t.triggerAttach(t, n), l(t, n) }, bindAndShow: function (e, t, a, o) { a.child = e, a.parent.__composition_context = a, a.cacheViews ? a.composingNewView = -1 == r.utils.arrayIndexOf(a.viewElements, e) : a.composingNewView = !0, u(a, function () { if (a.parent.__composition_context == a) { try { delete a.parent.__composition_context } catch (o) { a.parent.__composition_context = void 0 } if (a.binding && a.binding(a.child, a.parent, a), a.preserveContext && a.bindingContext) a.composingNewView && (a.parts && g(a), p(e), r.virtualElements.prepend(a.parent, e), i.bindContext(a.bindingContext, e, a.model, a.as)); else if (e) { var c = a.model || b, d = r.dataFor(e); if (d != c) { if (!a.composingNewView) return r.removeNode(e), void n.createView(e.getAttribute("data-view")).then(function (e) { y.bindAndShow(e, t, a, !0) }); a.parts && g(a), p(e), r.virtualElements.prepend(a.parent, e), i.bind(c, e) } } y.finalize(a, t) } else l(a, t) }, o, t) }, defaultStrategy: function (e) { return t.locateViewForObject(e.model, e.area, e.viewElements) }, getSettings: function (t, i) { var o, c = t(), d = r.utils.unwrapObservable(c) || {}, l = a.isActivator(c); if (e.isString(d)) return d = n.isViewUrl(d) ? { view: d } : { model: d, activate: !l }; if (o = e.getModuleId(d)) return d = { model: d, activate: !l }; !l && d.model && (l = a.isActivator(d.model)); for (var s in d) -1 != r.utils.arrayIndexOf(D, s) ? d[s] = r.utils.unwrapObservable(d[s]) : d[s] = d[s]; return l ? d.activate = !1 : void 0 === d.activate && (d.activate = !0), d }, executeStrategy: function (e, t) { e.strategy(e).then(function (i) { y.bindAndShow(i, t, e) }) }, inject: function (i, n) { return i.model ? i.view ? void t.locateView(i.view, i.area, i.viewElements).then(function (e) { y.bindAndShow(e, n, i) }) : (i.strategy || (i.strategy = this.defaultStrategy), void (e.isString(i.strategy) ? e.acquire(i.strategy).then(function (e) { i.strategy = e, y.executeStrategy(i, n) }).fail(function (e) { c(i, "Failed to load view strategy (" + i.strategy + "). Details: " + e.message, n) }) : this.executeStrategy(i, n))) : void this.bindAndShow(null, n, i) }, compose: function (i, n, a, o) { E++, o || (n = y.getSettings(function () { return n }, i)), n.compositionComplete && N.push(function () { n.compositionComplete(n.child, n.parent, n) }), N.push(function () { n.composingNewView && n.model && n.model.compositionComplete && n.model.compositionComplete(n.child, n.parent, n) }); var r = d(i); n.activeView = r.activeView, n.parent = i, n.triggerAttach = v, n.bindingContext = a, n.cacheViews && !n.viewElements && (n.viewElements = r.childElements), n.model ? e.isString(n.model) ? e.acquire(n.model).then(function (t) { n.model = e.resolveObject(t), y.inject(n, i) }).fail(function (e) { c(n, "Failed to load composed module (" + n.model + "). Details: " + e.message, i) }) : y.inject(n, i) : n.view ? (n.area = n.area || "partial", n.preserveContext = !0, t.locateView(n.view, n.area, n.viewElements).then(function (e) { y.bindAndShow(e, i, n) })) : this.bindAndShow(null, i, n) } }, r.bindingHandlers.compose = { init: function () { return { controlsDescendantBindings: !0 } }, update: function (e, t, i, a, o) { var c = y.getSettings(t, e); if (c.mode) { var d = r.utils.domData.get(e, S); if (!d) { var l = r.virtualElements.childNodes(e); d = {}, "inline" === c.mode ? d.view = n.ensureSingleElement(l) : "templated" === c.mode && (d.parts = f(l)), r.virtualElements.emptyNode(e), r.utils.domData.set(e, S, d) } "inline" === c.mode ? c.view = d.view.cloneNode(!0) : "templated" === c.mode && (c.parts = d.parts), c.preserveContext = !0 } y.compose(e, c, o, !0) } }, r.virtualElements.allowedBindings.compose = !0, y });